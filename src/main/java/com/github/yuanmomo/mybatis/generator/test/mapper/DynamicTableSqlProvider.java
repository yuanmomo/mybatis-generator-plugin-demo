package com.github.yuanmomo.mybatis.generator.test.mapper;

import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import com.github.yuanmomo.mybatis.generator.test.bean.DynamicTable;

public class DynamicTableSqlProvider {

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table mbg_table
     *
     * @mbg.generated
     */
    public static final String ALL_COLUMN_FIELDS = "id,int_value,long_value,string_value,text_value";

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mbg_table
     *
     * @mbg.generated
     */
    public String insertSelective(DynamicTable record) {
        SQL sql = new SQL();
        sql.INSERT_INTO(("${dynamicTableName}"));
        if (record.getIntValue() != null) {
            sql.VALUES("int_value", "#{intValue,jdbcType=INTEGER}");
        }
        if (record.getLongValue() != null) {
            sql.VALUES("long_value", "#{longValue,jdbcType=BIGINT}");
        }
        if (record.getStringValue() != null) {
            sql.VALUES("string_value", "#{stringValue,jdbcType=VARCHAR}");
        }
        if (record.getTextValue() != null) {
            sql.VALUES("text_value", "#{textValue,jdbcType=LONGVARCHAR}");
        }
        return sql.toString();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mbg_table
     *
     * @mbg.generated
     */
    public String updateByPrimaryKeySelective(Map<String, Object> parameter) {
        DynamicTable record = (DynamicTable) parameter.get("record");
        SQL sql = new SQL();
        sql.UPDATE(("${tableName}"));
        if (record.getIntValue() != null) {
            sql.SET("int_value = #{record.intValue,jdbcType=INTEGER}");
        }
        if (record.getLongValue() != null) {
            sql.SET("long_value = #{record.longValue,jdbcType=BIGINT}");
        }
        if (record.getStringValue() != null) {
            sql.SET("string_value = #{record.stringValue,jdbcType=VARCHAR}");
        }
        if (record.getTextValue() != null) {
            sql.SET("text_value = #{record.textValue,jdbcType=LONGVARCHAR}");
        }
        sql.WHERE("id = #{record.id,jdbcType=BIGINT}");
        return sql.toString();
    }
}
