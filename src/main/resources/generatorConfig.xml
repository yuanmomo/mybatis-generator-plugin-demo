<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

    <!-- 加载 mbg.properties 文件  -->
    <properties resource="mbg.properties"/>

    <!-- defaultModelType 的三个值 -->
    <!-- 1. conditional，默认值，类似于 hierarchical。区别是，不会为只有一个字段的数据库表生成一个单独的类。-->
    <!-- 2. hierarchical，主键生成一个 XxxKey 对象（key class），Blob 等字段单独生成一个对象，其它简单属性在一个对象中（record class）。-->
    <!-- 3. flat，所有字段（主键、blob 等）全部生成在一个对象中。-->
    <context id="mbg_schema" targetRuntime="MyBatis3" defaultModelType="flat">


        <!-- 生成的实体类（Bean）自动继承 java.io.Serializable interface. -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>

        <!-- ################################## 扩展插件列表 ################################## -->
        <!-- 生成的实体类（Bean）增加 Lombok 注解. -->
        <plugin type="com.github.yuanmomo.mybatis.mbg.plugin.LombokPlugin">
            <property name="data" value="true"/>
            <property name="hashEquals" value="true"/>
            <property name="toString" value="true"/>
            <property name="noArgConstructor" value="true"/>
        </plugin>

        <!-- 在 Provider 类增加 All Columns 属性 . -->
        <plugin type="com.github.yuanmomo.mybatis.mbg.plugin.allfields.AllColumnsFieldsPlugin"/>

        <!-- 在 Mapper 接口增加 batchInsert 方法 -->
        <plugin type="com.github.yuanmomo.mybatis.mbg.plugin.batch.MySqlBatchInsertPlugin">
            <property name="methodName" value="batchInsert"/>
        </plugin>

        <!-- 支持动态表名插件 -->
        <plugin type="com.github.yuanmomo.mybatis.mbg.plugin.dynamic.DynamicTableNamePlugin"/>


        <!-- 简化生成类. -->
        <plugin type="com.github.yuanmomo.mybatis.mbg.plugin.SimplePlugin" />

        <!-- 在 Mapper 接口增加 getOneByExample 方法 -->
        <!-- 如果启用了《简化生成类》插件，该插件不生效 -->
        <plugin type="com.github.yuanmomo.mybatis.mbg.plugin.getone.MapperAddGetOneByExamplePlugin">
            <property name="methodName" value="getOneByExample"/>
        </plugin>

        <!-- 增加分页支持 -->
        <!-- 如果启用了《简化生成类》插件，该插件不生效 -->
        <plugin type="com.github.yuanmomo.mybatis.mbg.plugin.PaginationPlugin"/>


        <!-- 在生成的注解中去掉日期，防止生成后，因为日志变更导致需要 git 提交 -->
        <commentGenerator>
            <property name="suppressDate" value="true"/>
        </commentGenerator>

        <!-- jdbc 配置 -->
        <jdbcConnection driverClass="${driver}" connectionURL="${url}"
                        userId="${username}" password="${password}" />

        <!-- Java 类型转换的配置 -->
        <javaTypeResolver>
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成的 Java Bean 配置 -->
        <javaModelGenerator targetPackage="${mbg.modelPackage}"
                            targetProject="${mbg.targetProject}" />

        <!-- 生成基于 Annotation 的 Mapper 接口和 Provider 类 -->
        <javaClientGenerator type="ANNOTATEDMAPPER"
                             targetPackage="${mbg.javaClientPackage}" targetProject="${mbg.targetProject}">
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!-- 表配置，包含多张表，这里只是一张示范表 -->
        <table tableName="mbg_table" domainObjectName="MbgTable">
            <!-- 自增长组件 -->
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>
        <!-- 动态表名示范 -->
        <table tableName="mbg_table" domainObjectName="DynamicTable">
            <!-- 如果该表需要动态传入表名，设置 dynamic 为 true -->
            <property name="dynamic" value="true"/>

            <!-- 自增长组件 -->
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>
        <table tableName="blob_table" domainObjectName="BlobTable">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>
        <table tableName="multi_key_table" domainObjectName="MultiKeyTable">
            <generatedKey column="id" sqlStatement="MySql" identity="true"/>
        </table>

        <!-- ... 多张表配置 ... -->
    </context>
</generatorConfiguration>